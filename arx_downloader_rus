#!/bin/bash

########################
#### Author: Osguot ####
########################

VERSION="3.1"

## This file contain information about install directory and type of installation
arx_downloader_conf_file="/home/$USER/.config/arx_downloader.conf"

## Export conf file if exist
if [ -f "$arx_downloader_conf_file" ]
then
    source $arx_downloader_conf_file
fi

## User share directory variable
USER_SHARE=/home/$USER/.local/share

function initialCheck () {
    
    ## Zenity check
    if [[ $(hash zenity) -eq "1" ]]
    then
        echo "Zenity не обнаружен. Выход."
        exit 1
    fi
    
    ## Root check
    if [ "$EUID" -eq 0 ]
    then 
        zenity --error --no-wrap --ok-label="Выход" --width=250 --title="Загрузчик Arx - Ошибка" --text="Запускать этот скрипт от имени администратора НЕЛЬЗЯ"
        exit 1
    fi
    
    ## Check for previous installation
    if [ -f "$arx_downloader_conf_file" ]
    then
        ## Set main menu text based on previous installation (if exist)
        if [ "$TYPE" = "OnlyLibertatis" ]
        then
            declare -g MM_text="Версия скрипта: $VERSION\n\nОбнаружен установленный Arx Libertatis!\nТип установки: Только Arx Libertatis\nВерсия: $AL_VERSION\nПуть: $INSTALL_DIR"
        elif [ "$TYPE" = "OnlyFatalis" ]
        then
            declare -g MM_text="Версия скрипта: $VERSION\n\nОбнаружен установленный Arx Fatalis!\nТип установки: Только Arx Fatalis\nПуть: $INSTALL_DIR"
        elif [ "$TYPE" = "Complex" ]
        then
            declare -g MM_text="Версия скрипта: $VERSION\n\nОбнаружен установленный Arx Libertatis!\nТип установки: Arx Libertatis и Arx Fatalis\nВерсия: $AL_VERSION\nПуть: $INSTALL_DIR"
        fi
    else
        declare -g MM_text="Версия скрипта: $VERSION"
    fi
}

function libertatisDownload () {
    
    ## Set Arx Libertatis install directory
    directory=$(zenity  --list --width=400 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx Libertatis" --text "Выберите расположение директории для файлов Arx Libertatis.\nДиректория 'arx' будет создана автоматически в выбранной папке.\n\nПо умолчанию: $USER_SHARE" --radiolist --hide-header --column "" --column "Варианты" TRUE "По умолчанию" FALSE "Выбрать...")
    if [ $? -eq "0" ]
    then
        if [ "$directory" = "По умолчанию" ]
        then
            declare -g install_folder="$USER_SHARE"
            cd $install_folder
            if [ -d "arx" ]
            then
                rm -r arx
            fi
            mkdir -p "$install_folder/arx"
        else
            if [ "$directory" = "Выбрать..." ]
            then
                declare -g install_folder=`zenity --file-selection --directory --title="Выберите расположение директории для файлов Arx Libertatis"`
                if [ $? -eq "0" ]
                then
                    cd $install_folder
                    if [ -d "arx" ]
                    then
                        rm -r arx
                    fi
                    mkdir -p "$install_folder/arx"
                else
                    end
                fi
            fi
        fi
    else
        end
    fi
    
    ## Save working folder for uninstaller
    toConfFile "TYPE=OnlyLibertatis" "INSTALL_DIR=$install_folder"
    
    ## Check latest version
    getLatestLibertatisVersion
    ## TODO Make latest stable version check
    
    ## Choosing Libertatis version dialog, downloading, unpacking and installing
    ver=$(zenity --list --width=480 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx Libertatis" --text="Выберите предпочитаемую версию Arx Libertatis." --radiolist --column="" --column="Версии" TRUE "Последняя стабильная 1.1.2 (Рекомендуется)" FALSE "Последний разраб. снапшот ($latestVer)")
    if [ $? -eq "0" ]
    then
        if [ "$ver" = "Последняя стабильная 1.1.2 (Рекомендуется)" ]
        then
            cd $install_folder/arx
            recommendedLinuxVerURL="http://arx-libertatis.org/files/arx-libertatis-1.1.2-linux.tar.xz"
            curl -sqL $recommendedLinuxVerURL | tar xJf - | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Загрузчик Arx Libertatis" --text="Загрузка и распаковка Arx Libertatis" --auto-close
            
            ## Move all downloaded files into arx diectory
            cd arx-libertatis-1.1.2-linux
            find . -maxdepth 1 -exec mv {} .. \;
            rmdir ../arx-libertatis-1.1.2-linux
            
            ## Send choosen version to conf file
            toConfFile "AL_VERSION=Stable"
        else
            ## Go to install directory and download archive into it
            cd $install_folder/arx
            curl -sqL $latestLinuxVerURL | tar xJf - | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Загрузчик Arx Libertatis" --text="Загрузка и распаковка Arx Libertatis" --auto-close
            
            ## Move all downloaded files into arx diectory
            cd $latestVer-linux
            find . -maxdepth 1 -exec mv {} .. \;
            rmdir ../$latestVer-linux
            
            ## Send choosen version to conf file
            toConfFile "AL_VERSION=$latestVer"
        fi
    else
        end
    fi
    
    ## Download game data if complex parameter has been set
    if [ "$1" = "complex" ]
    then
        gameDownload complex
    else
        zenity --info --no-wrap --title="Загрузчик Arx Libertatis" --ok-label="Ок" --text="Arx Libertatis успешно загружен."
    fi
    
    ## Call install function
    zenity --question --no-wrap --ok-label="Да" --cancel-label="Нет" --title="Установщик Arx Libertatis" --text="Хотите добавить ярлык в меню приложений и установить исполняемые файлы?\n\nПотребуются права администратора."
    if [ $? -eq "0" ]
    then
        libertatisInstall
    fi
}

function getLatestLibertatisVersion () {

    ## Detecting latest dev version of Arx Libertatis from arx-libertatis.org
    declare -g latestVer=$(wget -O- http://arx-libertatis.org/files/snapshots/ | grep -Eo 'arx-libertatis-1.2-dev-[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}' | sort -V | tail -1)
    
    ## Set file name and url for the latest Arx Libertatis version
    declare -g latestLinuxVerFile=$latestVer"-linux.tar.xz"
    declare -g latestLinuxVerURL="http://arx-libertatis.org/files/snapshots/$latestVer/$latestLinuxVerFile"
}

function libertatisVersionChecker () {
    
    function libertatisUpdate () {

        ## Go to install directory and download archive into it
        cd $INSTALL_DIR/arx
        curl -sqL $latestLinuxVerURL | tar xJf - | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Обновление Arx Libertatis" --text="Загрузка и распаковка Arx Libertatis" --auto-close
        
        cd $latestVer-linux
        ## Remove old bin and data directories and copy new one
        rm -rf ../{bin,data}
        mv {bin,data} ../
        rm -rf ../$latestVer-linux
        
        ## Change Arx Libertatis version in config file
        oldVersion=$(grep "AL_VERSION=" $arx_downloader_conf_file)
        sed -i -e "s/$oldVersion/AL_VERSION=$latestVer/g" $arx_downloader_conf_file
        
        zenity --info --no-wrap --title="Обновление Arx Libertatis" --text="Arx Libertatis успешно обновлен до версии $latestVer."
    }
    
    ## Check conf file
    if [ -f "$arx_downloader_conf_file" ]
    then
        ## Check current installed version
        if [ -z "$AL_VERSION" ]
        then
            zenity --warning --no-wrap --title="Обновление Arx Libertatis" --ok-label="Выход" --text="Установленный Arx Libertatis не обнаружен.\n\nArx Libertatis ДОЛЖЕН быть установлен через этот скрипт."
            exit 1
        elif [ "$AL_VERSION" = "Stable" ]
        then
            upgr=$(zenity --question --no-wrap --title="Обновление Arx Libertatis" --ok-label="Да" --cancel-label="Нет" --text="В данный момент у вас установлена стабильная версия Arx Libertatis.\n\nХотите обновить Arx Libertatis до разрабатываемой версии?")
            
            ## Exit if No
            if [ $? -eq "1" ]
            then
                exit 0
            fi
        fi
    else
        zenity --warning --no-wrap --title="Обновление Arx Libertatis" --ok-label="Выход" --text="Установленный Arx Libertatis не обнаружен.\n\nArx Libertatis ДОЛЖЕН быть установлен через этот скрипт."
        exit 1
    fi
    
    ## Call getLatestLibertatisVersion function
    getLatestLibertatisVersion
    
    ## arx-libertatis-1.2-dev-YYYY-MM-DD --> YYYY-MM-DD
    latest=$(echo $latestVer | grep -Eo '[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}')
    current=$(echo $AL_VERSION | grep -Eo '[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}')
    
    ## Version comparison
    if [[ "$latest" > "$current" ]]
    then
        upd=$(zenity --question --no-wrap --title="Обновление Arx Libertatis" --ok-label="Да" --cancel-label="Нет" --text="Доступно обновление! \n\nТекущая версия: $AL_VERSION\nНовая версия: $latestVer\n\nЗапустить процесс обновления?")
        if [ $? -eq "0" ]
        then
            libertatisUpdate
        else
            exit 0
        fi
    else
        zenity --warning --no-wrap --title="Обновление Arx Libertatis" --ok-label="Выход" --text="Новых версий Arx Libertatis не обнаружено."
        exit 0
    fi
}

function libertatisInstall () {
    
    ## Install binaries
    pkexec <<EOF
    ln -s $install_folder/arx/arx /usr/local/bin
    ln -s $install_folder/arx/arxunpak /usr/local/bin
    ln -s $install_folder/arx/arxsavetool /usr/local/bin
EOF
    
    ## Install icons
    for size in 16 22 24 32
    do
        mkdir -p $USER_SHARE/icons/hicolor/$size\x$size/apps
        cp $install_folder/arx/arx-libertatis_$size.png $USER_SHARE/icons/hicolor/$size\x$size/apps
    done
    
    mkdir -p $USER_SHARE/icons/hicolor/128x128/apps
    cp $install_folder/arx/arx-libertatis.png $USER_SHARE/icons/hicolor/128x128/apps
    
    ## Install .desktop file
    cp $install_folder/arx/arx-libertatis.desktop $USER_SHARE/applications
    
    ## For uninstaller
    toConfFile "BIN_ICO=true"
    
    ## Info message
    zenity --info --no-wrap --window-icon=arx-libertatis_32.png --title="Установщик Arx Libertatis" --text="Arx Libertatis успешно установлен!"
}

function libertatisUninstaller () {

    ## Check and export conf file
    if [ -f "$arx_downloader_conf_file" ]
    then
        zenity --question --no-wrap --ok-label="Да" --cancel-label="Отмена" --title="Удаление Arx - ПРЕДУПРЕЖДЕНИЕ" --text="Вы уверены, что хотите полностью удалить Arx Libertatis?\nЭто также удалит файлы данных игры.\n\nЕсли скрипт обнаружит сохранения, то предложит их сохранить."
        if [ $? -eq "1" ]
        then
            exit 1
        fi
    else
        zenity --error --no-wrap --title="Удаление Arx" --text="Похоже что Arx не установлен на вашей системе или же он был установлен не через этот скрипт. Отмена."
        end
    fi
    
    ## Check for installed binaries and icons
    if [ -n "$BIN_ICO" ]
    then
        ## Deleting binaries
        pkexec rm /usr/local/bin/arx /usr/local/bin/arxsavetool /usr/local/bin/arxunpak
        
        ## Deleting icons
        for size in 16 22 24 32
        do
            rm $USER_SHARE/icons/hicolor/$size\x$size/apps/arx-libertatis_$size.png
        done
        rm $USER_SHARE/icons/hicolor/128x128/apps/arx-libertatis.png
        
        ## Deleting menu entry
        rm $USER_SHARE/applications/arx-libertatis.desktop
    fi
    
    ## Check game saves and delete arx directory in user/.local/share
    if [ -d $USER_SHARE/arx/save ]
    then
        if [ -z "$(ls -A $USER_SHARE/arx/save)" ]
        then
            rm -rf $USER_SHARE/arx
        else
            ## Game saves found
            saves=$(zenity --question --no-wrap --ok-label="Сохранить" --cancel-label="Удалить" --title="Удаление Arx" --text="Найдены игровые файлы сохранений.\n\nЧто с ними делать?")
            if [ $? -eq "0" ]
            then
                ## Backup saves
                backup_dir=$(zenity --file-selection --directory --title="Выберите папку для сохранения")
                backup_name="Arx_Saves_Backup_($(date +"%d-%b-%Y")).tar.gz"
                cd $USER_SHARE
                tar -zcf $backup_dir/$backup_name arx/save
            fi
            ## Delete arx directory
            rm -rf $USER_SHARE/arx
        fi
    fi
    
    ## Deleting working/install directory
    if [ "$TYPE" = "OnlyFatalis" ]
    then
        rm -rf $INSTALL_DIR
    else
        rm -rf $INSTALL_DIR/arx
    fi
    
    ## Deleting config directory
    rm -rf /home/$USER/.config/arx
    
    ## Deleting arx_downloader.conf file
    rm $arx_downloader_conf_file
    
    ## Success message
    zenity --info --no-wrap --ok-label="Завершить" --title="Удаление Arx" --text="Arx Libertatis успешно удален!"
}

function gameDownload () {
    
    ## Set directory for downloaded files equal AL install directory if complex install parameter has been set
    if [ "$1" = "complex" ]
    then
        working_folder="$install_folder/arx/arx_downloader"
        mkdir -p "$working_folder"
        ## Save working folder and version for uninstaller
        toConfFile "TYPE=Complex" "INSTALL_DIR=$install_folder"
        toConfFile "AL_VERSION=$latestVer"
    else
        ## Set directory for downloaded game files
        directory=$(zenity  --list --width=400 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx" --text "Выберите расположение директории для загружаемых игровых файлов.\nПо умолчанию: /home/$USER/arx_downloader" --radiolist --hide-header --column "" --column "Варианты" TRUE "По умолчанию" FALSE "Выбрать...")
        if [ $? -eq "0" ]
        then
            if [ "$directory" = "По умолчанию" ]
            then
                working_folder="/home/$USER/arx_downloader"
                mkdir -p "$working_folder"

            else
                if [ "$directory" = "Выбрать..." ]
                then
                    working_folder=`zenity --file-selection --directory --title="Выберите расположение директории для загружаемых игровых файлов"`/arx_downloader
                    if [ $? -eq "0" ]
                    then
                        mkdir -p "$working_folder"
                    else
                        end
                    fi
                fi
            fi
            
            ## Save working folder for uninstaller
            toConfFile "TYPE=OnlyFatalis" "INSTALL_DIR=$working_folder"
        else
            end
        fi
    fi

    ## Set Steam login and password
    loginpass=$(zenity --username --password --title="Введите ваш логин и пароль от Steam")
    if [ $? -eq "1" ]
    then
        end
    fi
    loginpass=$(echo $loginpass | tr '|' ' ')

    ## Download SteamCMD
    cd $working_folder
    curl -sqL "https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz" | tar zxvf - | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Загрузчик Arx" --text="Загрузка и распаковка SteamCMD" --auto-close
    ./steamcmd.sh +login anonymous +quit | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Загрузчик Arx" --text="Обновление SteamCMD" --auto-close

    ## Game language selection
    lang=$(zenity  --list --width=400 --height=300 --cancel-label="Отмена" --ok-label="Далее" --title "Загрузчик Arx" --text="Выберите предпочитаемый язык игры" --radiolist --column="" --column="Язык" TRUE "Английский" FALSE "Русский" FALSE "Французский" FALSE "Итальянский" FALSE "Немецкий" FALSE "Испанский")
    if [ $? -eq "0" ]
    then
        case $lang in
            Русский)
                language="russian";;
            Французский)
                language="french";;
            Итальянский)
                language="italian";;
            Немецкий)
                language="german";;
            Испанский)
                language="spanish";;
            *)
                language="english";;
        esac
    else
        zenity --question --no-wrap --title="Загрузчик Arx" --text="Остановить скрипт и отменить загрузку Arx Fatalis?"
        if [ $? -eq "0" ]
        then
            end
        fi
    fi

    ## Download Arx Fatalis
    mkdir arx
    xterm -bg black -fg white -e ./steamcmd.sh +@sSteamCmdForcePlatformType windows +login $loginpass +force_install_dir ./arx +app_update 1700 validate -language $language +quit

    ## Check and Clean up
    if [ -e ./arx/arx.exe ]
    then
        #echo "Success"
        cd ./arx
        mv *.pak Graph misc ../
        cd ..
        rm -r arx linux64 linux32 package public steamcmd.sh
        for i in *; do mv $i `echo $i | tr [:upper:] [:lower:]`; done
        if [ $? -eq "0" ]
        then
            zenity --info --no-wrap --title="Загрузчик Arx" --ok-label="Ок" --text="Arx Fatalis успешно загружен."
        fi
    else
        #echo "Fail"
        zenity --error --no-wrap --title="Загрузчик Arx - Опаньки" --text="Произошла ошибка. Попробуйте еще раз."
        rm -r arx linux64 linux32 package public steamcmd.sh
    fi
    
    ## Copy game files into Arx Libertatis directory and remove temporary directory (only complex installation)
    if [ "$1" = "complex" ]
    then
        cd $working_folder
        cp -r * .. | zenity --progress --width=300 --pulsate --cancel-label="Отмена" --title="Загрузчик Arx" --text="Копирование файлов..." --auto-close
        rm -rf ../arx_downloader
    fi
}

function toConfFile () {
    
    ## If function gets 2 parameters - replace existing file with new one
    if [[ -n "$1" && -n "$2" ]]
    then
        echo "$1" > $arx_downloader_conf_file
        echo "$2" >> $arx_downloader_conf_file
    ## Else - add line to existing file
    else
        echo "$1" >> $arx_downloader_conf_file
    fi
}

function end () {
    
    ## Delete arx_downloader.conf file when canceled
    rm $arx_downloader_conf_file
    exit 1
}

initialCheck

## Main menu constructor
if [ -f "$arx_downloader_conf_file" ]
then
    if [ "$TYPE" = "Complex" ] || [ "$TYPE" = "OnlyLibertatis" ]
    then
        menu=$(zenity --list --width=310 --height=250 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx Libertatis" --text="$MM_text" --radiolist --column="" --column="" TRUE "Проверить обновления" FALSE "Полностью удалить Arx Libertatis")
    elif [ "$TYPE" = "OnlyFatalis" ]
    then
        menu=$(zenity --list --width=310 --height=250 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx Libertatis" --text="$MM_text" --radiolist --column="" --column="" TRUE "Полностью удалить Arx Libertatis")
    fi
else
    menu=$(zenity --list --width=310 --height=250 --cancel-label="Выход" --ok-label="Далее" --title "Загрузчик Arx Libertatis" --text="$MM_text" --radiolist --column="" --column="" TRUE "Загрузить Arx Libertatis и Arx Fatalis" FALSE "Загрузить только Arx Libertatis" FALSE "Загрузить только Arx Fatalis" FALSE "Проверить обновления" FALSE "Полностью удалить Arx Libertatis")
fi

if [ $? -eq "0" ]
then
    case $menu in
        "Загрузить Arx Libertatis и Arx Fatalis")
            libertatisDownload complex;;
        "Загрузить только Arx Libertatis")
            libertatisDownload;;
        "Загрузить только Arx Fatalis")
            gameDownload;;
        "Проверить обновления")
            libertatisVersionChecker;;
        "Полностью удалить Arx Libertatis")
            libertatisUninstaller;;
    esac
else
    exit 1
fi
